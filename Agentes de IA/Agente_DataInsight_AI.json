{
  "name": "Agente DataInsight AI",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "=Eres DataInsight AI, el agente inteligente de análisis de datos de NeuraX.\nTu papel es analizar los datos de ventas, operaciones y negocio de fuentes estructuradas como Google Sheets, y devolver ideas precisas.\nRecibes los mensajes por telegram {{ $json.message.text }} {{ $('Telegram Trigger1').item.json.message.text }}{{ $json.text }}, y respondes a ellos usando la herramienta **telegram**.\nSiempre debes priorizar:\n1. La interpretación de los datos numéricos\n2. Detectar anomalías o tendencias\n3. Responder en un tono centrado en el negocio\nLa fecha actual es {{ $now }}\nUtilice la herramienta Think, para cosas complejas y si necesita pensar en algo relacionado con la solicitud\n\nSiempre hablamos en castellano",
        "options": {
          "maxIterations": 15
        }
      },
      "id": "d30ef52f-5be8-4b2f-a3ce-b360f460937e",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        220,
        0
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {
          "temperature": 0.2
        }
      },
      "id": "8da755b7-b084-4717-aca0-a7d1b54cb8df",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        140,
        240
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "OISI3zpeZVJDfFSd",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "id": "1515e88c-33bc-4739-848b-d531e0649d6a",
      "name": "Calculator",
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "position": [
        820,
        400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "name": "records_by_date_and_or_status",
        "description": "Use this tool to get records filtered by date. You can also filter by status at the same time, if you want.",
        "workflowId": {
          "__rl": true,
          "value": "Ry93yyCdSIPm4JMH",
          "mode": "list",
          "cachedResultName": "My Sub-Workflow 1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "start_date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('start_date', ``, 'string') }}",
            "end_date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('end_date', ``, 'string') }}",
            "status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('status', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "start_date",
              "displayName": "start_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "end_date",
              "displayName": "end_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "id": "8bd4b9d5-10fa-40c2-921f-c86bb14a9b2c",
      "name": "Records by date",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        1000,
        220
      ],
      "typeVersion": 2,
      "disabled": true
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Find transactions by product.\nOur products are:\n- Widget A\n- Widget B\n- Widget C\n- Widget D",
        "documentId": {
          "__rl": true,
          "value": "1Gk4Bqc6_vIuY0il6-Vtt8hK3HOPzp_H6PLCBQWEv2eI",
          "mode": "list",
          "cachedResultName": "Datos Ventas",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Gk4Bqc6_vIuY0il6-Vtt8hK3HOPzp_H6PLCBQWEv2eI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 225080561,
          "mode": "list",
          "cachedResultName": "Hoja 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Gk4Bqc6_vIuY0il6-Vtt8hK3HOPzp_H6PLCBQWEv2eI/edit#gid=225080561"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Product",
              "lookupValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('values0_Value', ``, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9a087572-10c9-45d4-a1bc-881946e712d9",
      "name": "Get transactions by product name",
      "type": "n8n-nodes-base.googleSheetsTool",
      "position": [
        1000,
        20
      ],
      "typeVersion": 4.5,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "jzdxqTTFKKi6JSME",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Only use this as last resort, because it will pull all data at once.",
        "documentId": {
          "__rl": true,
          "value": "1Gk4Bqc6_vIuY0il6-Vtt8hK3HOPzp_H6PLCBQWEv2eI",
          "mode": "list",
          "cachedResultName": "Datos Ventas",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Gk4Bqc6_vIuY0il6-Vtt8hK3HOPzp_H6PLCBQWEv2eI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 225080561,
          "mode": "list",
          "cachedResultName": "Hoja 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Gk4Bqc6_vIuY0il6-Vtt8hK3HOPzp_H6PLCBQWEv2eI/edit#gid=225080561"
        },
        "options": {}
      },
      "id": "41dfaa1b-86e4-4082-9149-27e0c308fd66",
      "name": "Get all transactions",
      "type": "n8n-nodes-base.googleSheetsTool",
      "position": [
        820,
        220
      ],
      "typeVersion": 4.5,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "jzdxqTTFKKi6JSME",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "1",
        "contextWindowLength": 20
      },
      "id": "41b9ab4f-0573-4468-9ba8-165a6933a787",
      "name": "Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        340,
        240
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Find transactions by status",
        "documentId": {
          "__rl": true,
          "value": "1Gk4Bqc6_vIuY0il6-Vtt8hK3HOPzp_H6PLCBQWEv2eI",
          "mode": "list",
          "cachedResultName": "Datos Ventas",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Gk4Bqc6_vIuY0il6-Vtt8hK3HOPzp_H6PLCBQWEv2eI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 225080561,
          "mode": "list",
          "cachedResultName": "Hoja 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Gk4Bqc6_vIuY0il6-Vtt8hK3HOPzp_H6PLCBQWEv2eI/edit#gid=225080561"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status",
              "lookupValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('values0_Value', ``, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "db7646fc-fb38-4484-9427-e4781ffbf61d",
      "name": "Get transactions by status",
      "type": "n8n-nodes-base.googleSheetsTool",
      "position": [
        820,
        20
      ],
      "typeVersion": 4.5,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "jzdxqTTFKKi6JSME",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "description": "Use the tool to think about the data."
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        500,
        240
      ],
      "id": "15231804-ff6a-4bbe-a243-feb6f070945a",
      "name": "Think"
    },
    {
      "parameters": {
        "chatId": "=7460408421",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Text', ``, 'string') }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegramTool",
      "typeVersion": 1.2,
      "position": [
        660,
        380
      ],
      "id": "a98473b8-080e-4fe2-a37b-a088b047a0bd",
      "name": "Telegram",
      "webhookId": "e409c994-1bca-4c84-8160-ff4da195116c",
      "credentials": {
        "telegramApi": {
          "id": "SYGpqFnQJBGH10JB",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8d4b916c-d38a-455f-a10a-0c8e440bfe67",
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -500,
        0
      ],
      "id": "84f779da-7757-4304-abb0-b62819b5d3c8",
      "name": "Switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e4145e69-b00c-43dc-bf65-7647a862fbe4",
              "name": "text",
              "value": "={{ $('Telegram Trigger1').item.json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -140,
        -80
      ],
      "id": "dcf4faf7-b2ce-4e7a-a814-c5f6a1a8c7f7",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -40,
        60
      ],
      "id": "2b1d4ef7-7797-4f02-865a-e59db9950f95",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "OISI3zpeZVJDfFSd",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -700,
        0
      ],
      "id": "42c3aba2-68f2-4574-ae9b-d01d7ebc25cc",
      "name": "Telegram Trigger1",
      "webhookId": "5f3fe51b-27a9-41ba-927e-f00ea5ae79c2",
      "credentials": {
        "telegramApi": {
          "id": "SYGpqFnQJBGH10JB",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -240,
        60
      ],
      "id": "0e74acac-b0ef-484b-b770-b7d73d7bde99",
      "name": "Telegram1",
      "webhookId": "52f4d0ed-5036-4014-bdcd-8ff723ddfb33",
      "credentials": {
        "telegramApi": {
          "id": "SYGpqFnQJBGH10JB",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "start_date"
            },
            {
              "name": "end_date"
            },
            {
              "name": "status"
            }
          ]
        }
      },
      "id": "6ed36ccc-386e-488b-abd8-9678802aca15",
      "typeVersion": 1.1,
      "name": "When Executed by Another Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -200,
        880
      ]
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nif (!items || items.length === 0) {\n  throw new Error(\"No input items found.\");\n}\n\nconst input = items[0].json;\n\nif (!input.data) {\n  throw new Error(\"Input JSON does not have a 'data' property.\");\n}\n\nconst rawData = input.data;\n\nconst regex = /google\\.visualization\\.Query\\.setResponse\\((.*)\\);?$/s;\nconst match = rawData.match(regex);\n\nif (!match) {\n  throw new Error(\"Input data does not match expected format.\");\n}\n\nconst jsonContent = match[1];\n\nreturn { jsonContent };\n"
      },
      "id": "8a1ee448-5871-4252-9c68-6982f9f23e5b",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "position": [
        160,
        880
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "b006d1c8-0d72-4c16-99c7-0db45d386040",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        520,
        880
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "https://docs.google.com/spreadsheets/d/1mHw6AxISOlTTU-ezrH_eB2Jw-nIN2JfDrLvZ03sHqII/edit?gid=1514152900#gid=1514152900",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleSheetsOAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "=Datos Ventas",
              "value": "Hoja 1"
            },
            {
              "name": "tq",
              "value": "=SELECT * WHERE A >= DATE \"{{ $json.start_date }}\" AND A <= DATE \"{{ $json.end_date }}\""
            }
          ]
        },
        "options": {}
      },
      "id": "81659c08-c1a1-4ccf-9fc8-e572b0519c11",
      "name": "Google Sheets request",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -20,
        880
      ],
      "typeVersion": 4.2,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "jzdxqTTFKKi6JSME",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "e50da873-bbbd-41d3-a418-83193907977c",
              "operator": {
                "type": "string",
                "operation": "contains"
              },
              "leftValue": "={{ $json.Status }}",
              "rightValue": "={{ $('When Executed by Another Workflow').item.json.status }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ab9e7711-33b5-4da1-8eb5-e462c66c9628",
      "name": "Filter by status",
      "type": "n8n-nodes-base.filter",
      "position": [
        340,
        880
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "content": "# Sub-workflow\nThe AI can call this sub-workflow anytime,\nby using the **Records by date** tool.\n\nThe sub-workflow automatically return\n the result of the last executed node to the AI.",
        "height": 520,
        "width": 1100,
        "color": 7
      },
      "id": "525173fe-4ad7-401c-9706-51bf968dfaf1",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -340,
        580
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Records by date": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get all transactions": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get transactions by status": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get transactions by product name": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        []
      ]
    },
    "Telegram": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram1": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Google Sheets request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Filter by status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets request": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter by status": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d2e3b2b2-f9cd-45ef-97b2-e0412fdbd8c1",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e0b56e68b804c12294ee75f8fc07d0556304fe5992fedc6d0ec01ac0c5cf1b66"
  },
  "id": "ufwo83G3F6g8rfXb",
  "tags": []
}